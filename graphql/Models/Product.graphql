type Product {
    id: ID!
    name: String!
    slug: String!
    description: String
    image_url: String
    price: Int
    brand: Brand @belongsTo
    category: Category @belongsTo
    inventories: [Inventory] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
}

input ProductInput {
    id: ID
    name: String!
    slug: String!
    description: String
    image_url: String
    price: Int
    brand: ConnectBrandRelation
    category: ConnectCategoryRelation
    inventories: ConnectInventoriesRelation
}

input ConnectProductRelation {
    connect: ID
    upsert: ProductInput
    disconnect: Boolean
    delete: Boolean
}

input ConnectProductsRelation {
    connect: [ID]
    upsert: [ProductInput]
    delete: [ID]
}

extend type Query {
    products(
        search: String @scope(name: "search")
    ): [Product]! @all
    productsPaginate: [Product]! @paginate
    productsCount: Int! @count(model: "Product")
}

extend type Mutation {
    upsertProduct(input: ProductInput! @spread): Product @upsert
    deleteProduct(id: [ID!] @eq): [Product] @delete
    restoreProduct(id: [ID!] @eq): [Product] @restore
}
